{"mappings":"ycAAA,IAAAA,EAAAC,EAAA,S,mEAKA,MAAMC,EAAW,CACf,CACEC,SAAU,yDAEZ,CACEA,SAAU,sDAIC,SAAAC,IACb,MAAOC,EAASC,IAAc,EAAAC,EAAAC,UAAS,KAEhCC,EAAQC,EAAMC,GAAaC,EAAAC,EAAA,CAAgB,CAAEC,OAAQ,MAc5D,OAZA,EAAAP,EAAAQ,YAAU,KACJJ,GACFK,QAAQC,IACNf,EAASgB,KAAKC,GACLC,MAAMD,EAAKhB,UAAUkB,MAAMC,GAAQA,EAAIC,YAEhDF,MAAMG,IACNlB,EAAWkB,EAAO,GAClB,GAEH,CAACb,KAGF,EAAAX,EAAAyB,MAAC,MAAG,CAACC,UAAU,WAAWC,IAAMC,GAASnB,EAAOmB,G,WAC9C,EAAA5B,EAAA6B,KAAC,MAAG,CAACH,UAAU,sC,UACb,EAAA1B,EAAA6B,KAAC,KAAE,C,SAAC,4BAEN,EAAA7B,EAAA6B,KAAC,MAAG,CAACH,UAAU,0C,SACO,IAAnBrB,EAAQyB,QACP,EAAA9B,EAAA6B,KAACE,EAAAC,QAAO,IAER3B,EAAQa,KAAI,CAACC,EAAMc,KAAU,EAAA1B,EAAA2B,eAACC,EAAAH,QAAM,IAAKb,EAAMiB,IAAKH,U,sECxC9D,IAAAjC,EAAAC,EAAA,S,yCAIA,MAAMoC,EAAmBC,IAChB,EAAAtC,EAAA6B,KAAChB,EAAA0B,UAAS,CAAC7B,MAAM,EAAA8B,EAAAR,SAAWM,GAAWG,IAAKH,I,IA6BrDI,EA1BmB,EAACC,KAClBA,EAAIC,SACJA,EAAQC,iBACRA,EAAgBP,SAChBA,EAAQQ,YACRA,EAAWC,MACXA,MAEA,EAAA/C,EAAAyB,MAAC,MAAG,CAACC,UAAU,O,WACb,EAAA1B,EAAAyB,MAAC,KAAE,C,WACD,EAAAzB,EAAA6B,KAAC,IAAC,CAACmB,KAAMJ,EAAUH,IAAKE,EAAMM,OAAO,S,SAClCN,IACE,IACJE,EAAiB,KAAC,EAAA7C,EAAA6B,KAAC,IAAC,CAACH,UAAU,mBAElC,EAAA1B,EAAAyB,MAAC,MAAG,C,WACF,EAAAzB,EAAA6B,KAAC,QAAK,C,SAAC,kBACP,EAAA7B,EAAA6B,KAAC,IAAC,C,SAAEiB,QAEN,EAAA9C,EAAAyB,MAAC,MAAG,C,WACF,EAAAzB,EAAA6B,KAAC,QAAK,C,SAAC,iBACP,EAAA7B,EAAA6B,KAAC,MAAG,CAACH,UAAU,e,SAAgBW,EAAgBC,U,yECRrDY,EArByBZ,IAEvB,OADAA,EAAWA,EAASa,eAElB,IAAK,MACHb,GAAY,KACZ,MACF,IAAK,OACHA,GAAY,KACZ,MACF,IAAK,UACL,IAAK,SACHA,GAAY,QAOhB,MAAO,2BAA2BA,OAAc,C","sources":["src/components/openSource.js","src/components/githubRepo.js","src/API/getSVGIcon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useIsInViewport from 'lazy-react';\nimport Loading from '../components/Loading';\nimport GitHub from '../components/githubRepo';\n\nconst projects = [\n  {\n    endpoint: 'https://api.github.com/repos/jonathanobino/react-lazy',\n  },\n  {\n    endpoint: 'https://api.github.com/repos/jonathanobino/rately',\n  },\n];\n\nexport default function OpenSource() {\n  const [results, setResults] = useState([]);\n\n  const [setRef, link, isVisible] = useIsInViewport({ offset: 200 });\n\n  useEffect(() => {\n    if (isVisible) {\n      Promise.all(\n        projects.map((elem) => {\n          return fetch(elem.endpoint).then((res) => res.json());\n        })\n      ).then((values) => {\n        setResults(values);\n      });\n    }\n  }, [isVisible]);\n\n  return (\n    <div className=\"row main\" ref={(node) => setRef(node)}>\n      <div className=\"medium-2 large-2 columns text-right\">\n        <h2>Open Source Projects</h2>\n      </div>\n      <div className=\"medium-10 large-10 columns spaceBetween\">\n        {results.length === 0 ? (\n          <Loading />\n        ) : (\n          results.map((elem, index) => <GitHub {...elem} key={index} />)\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { LazyImage } from 'lazy-react';\nimport getSVGIcon from '../API/getSVGIcon';\n\nconst getLanguageIcon = (language) => {\n  return <LazyImage link={getSVGIcon(language)} alt={language} />;\n};\n\nconst GitHubRepo = ({\n  name,\n  html_url,\n  stargazers_count,\n  language,\n  description,\n  owner,\n}) => (\n  <div className=\"repo\">\n    <h4>\n      <a href={html_url} alt={name} target=\"_blank\">\n        {name}\n      </a>{' '}\n      {stargazers_count} <i className=\"fa fa-star\"></i>\n    </h4>\n    <div>\n      <small>Description:</small>\n      <p>{description}</p>\n    </div>\n    <div>\n      <small>Languagues:</small>\n      <div className=\"spaceBetween\">{getLanguageIcon(language)}</div>\n    </div>\n  </div>\n);\n\nexport default GitHubRepo;\n","const getLanguageIcon = (language) => {\n  language = language.toLowerCase();\n  switch (language) {\n    case 'css':\n      language += '-3';\n      break;\n    case 'html':\n      language += '-5';\n      break;\n    case 'angular':\n    case 'nodejs':\n      language += '-icon';\n      break;\n    default:\n      break;\n  }\n\n  //return `//s3-us-west-2.amazonaws.com/svgporn.com/logos/${language}.svg`\n  return `//cdn.svgporn.com/logos/${language}.svg`;\n};\n\nexport default getLanguageIcon;\n"],"names":["$ayMG0","parcelRequire","$8178dba01728dec3$var$projects","endpoint","$8178dba01728dec3$export$2e2bcd8739ae039","results","setResults","$acw62","useState","setRef","link","isVisible","$parcel$interopDefault","$jsbZM","offset","useEffect","Promise","all","map","elem","fetch","then","res","json","values","jsxs","className","ref","node","jsx","length","$5q0qc","default","index","createElement","$bmx0d","key","$845b595e1e755f21$var$getLanguageIcon","language","LazyImage","$bjukx","alt","$845b595e1e755f21$export$2e2bcd8739ae039","name","html_url","stargazers_count","description","owner","href","target","$83c8ff05eaf7b11d$export$2e2bcd8739ae039","toLowerCase"],"version":3,"file":"openSource.5ebf0d4a.js.map"}